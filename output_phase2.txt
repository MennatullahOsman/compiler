*********************************************************************************************
The predictive parsing table : 
*********************************************************************************************
Non terminal : ASSIGNMENT --> 
If float then synch 
If id then id assign EXPRESSION ; 
If if then synch 
If int then synch 
If while then synch 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : CLASS_BODY --> 
If float then DECLARATION 
If id then ASSIGNMENT 
If int then DECLARATION 
If private then METHOD_LIST 
If public then METHOD_LIST 
If } then ^ 

-----------------------------------------------------------------------------------------
Non terminal : CLASS_DECL --> 
If $ then synch 
If private then MODIFIER class id { CLASS_BODY } 
If public then MODIFIER class id { CLASS_BODY } 

-----------------------------------------------------------------------------------------
Non terminal : DECLARATION --> 
If float then PRIMITIVE_TYPE id ; 
If id then synch 
If if then synch 
If int then PRIMITIVE_TYPE id ; 
If while then synch 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : EXPRESSION --> 
If ( then SIMPLE_EXPRESSION EXPRESSION` 
If ) then synch 
If + then SIMPLE_EXPRESSION EXPRESSION` 
If - then SIMPLE_EXPRESSION EXPRESSION` 
If ; then synch 
If id then SIMPLE_EXPRESSION EXPRESSION` 
If num then SIMPLE_EXPRESSION EXPRESSION` 

-----------------------------------------------------------------------------------------
Non terminal : EXPRESSION` --> 
If ) then ^ 
If ; then ^ 
If relop then relop SIMPLE_EXPRESSION 

-----------------------------------------------------------------------------------------
Non terminal : FACTOR --> 
If ( then ( EXPRESSION ) 
If ) then synch 
If ; then synch 
If addop then synch 
If id then id 
If mulop then synch 
If num then num 
If relop then synch 

-----------------------------------------------------------------------------------------
Non terminal : IF --> 
If float then synch 
If id then synch 
If if then if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
If int then synch 
If while then synch 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : METHOD_BODY --> 
If float then STATEMENT_LIST 
If id then STATEMENT_LIST 
If if then STATEMENT_LIST 
If int then STATEMENT_LIST 
If while then STATEMENT_LIST 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : METHOD_DECL --> 
If private then MODIFIER PRIMITIVE_TYPE id ( ) { METHOD_BODY } 
If public then MODIFIER PRIMITIVE_TYPE id ( ) { METHOD_BODY } 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : METHOD_LIST --> 
If private then METHOD_DECL METHOD_LIST_dash 
If public then METHOD_DECL METHOD_LIST_dash 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : METHOD_LIST_dash --> 
If private then METHOD_DECL METHOD_LIST_dash 
If public then METHOD_DECL METHOD_LIST_dash 
If } then ^ 

-----------------------------------------------------------------------------------------
Non terminal : MODIFIER --> 
If class then synch 
If float then synch 
If int then synch 
If private then private 
If public then public 

-----------------------------------------------------------------------------------------
Non terminal : PRIMITIVE_TYPE --> 
If float then float 
If id then synch 
If int then int 

-----------------------------------------------------------------------------------------
Non terminal : SIGN --> 
If ( then synch 
If + then + 
If - then - 
If id then synch 
If num then synch 

-----------------------------------------------------------------------------------------
Non terminal : SIMPLE_EXPRESSION --> 
If ( then TERM SIMPLE_EXPRESSION_dash 
If ) then synch 
If + then SIGN TERM SIMPLE_EXPRESSION_dash 
If - then SIGN TERM SIMPLE_EXPRESSION_dash 
If ; then synch 
If id then TERM SIMPLE_EXPRESSION_dash 
If num then TERM SIMPLE_EXPRESSION_dash 
If relop then synch 

-----------------------------------------------------------------------------------------
Non terminal : SIMPLE_EXPRESSION_dash --> 
If ) then ^ 
If ; then ^ 
If addop then addop TERM SIMPLE_EXPRESSION_dash 
If relop then ^ 

-----------------------------------------------------------------------------------------
Non terminal : STATEMENT --> 
If float then DECLARATION 
If id then ASSIGNMENT 
If if then IF 
If int then DECLARATION 
If while then WHILE 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : STATEMENT_LIST --> 
If float then STATEMENT STATEMENT_LIST_dash 
If id then STATEMENT STATEMENT_LIST_dash 
If if then STATEMENT STATEMENT_LIST_dash 
If int then STATEMENT STATEMENT_LIST_dash 
If while then STATEMENT STATEMENT_LIST_dash 
If } then synch 

-----------------------------------------------------------------------------------------
Non terminal : STATEMENT_LIST_dash --> 
If float then STATEMENT STATEMENT_LIST_dash 
If id then STATEMENT STATEMENT_LIST_dash 
If if then STATEMENT STATEMENT_LIST_dash 
If int then STATEMENT STATEMENT_LIST_dash 
If while then STATEMENT STATEMENT_LIST_dash 
If } then ^ 

-----------------------------------------------------------------------------------------
Non terminal : TERM --> 
If ( then FACTOR TERM_dash 
If ) then synch 
If ; then synch 
If addop then synch 
If id then FACTOR TERM_dash 
If num then FACTOR TERM_dash 
If relop then synch 

-----------------------------------------------------------------------------------------
Non terminal : TERM_dash --> 
If ) then ^ 
If ; then ^ 
If addop then ^ 
If mulop then mulop FACTOR TERM_dash 
If relop then ^ 

-----------------------------------------------------------------------------------------
Non terminal : WHILE --> 
If float then synch 
If id then synch 
If if then synch 
If int then synch 
If while then while ( EXPRESSION ) { STATEMENT } 
If } then synch 

-----------------------------------------------------------------------------------------
*********************************************************************************************
Left Most Derivation Output : 
*********************************************************************************************
CLASS_DECL --> } CLASS_BODY { id class MODIFIER 
-----------------------------------------------------------------------------------------
MODIFIER --> public 
-----------------------------------------------------------------------------------------
accept public
-----------------------------------------------------------------------------------------
accept class
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
accept {
-----------------------------------------------------------------------------------------
CLASS_BODY --> METHOD_LIST 
-----------------------------------------------------------------------------------------
METHOD_LIST --> METHOD_LIST_dash METHOD_DECL 
-----------------------------------------------------------------------------------------
METHOD_DECL --> } METHOD_BODY { ) ( id PRIMITIVE_TYPE MODIFIER 
-----------------------------------------------------------------------------------------
MODIFIER --> private 
-----------------------------------------------------------------------------------------
accept private
-----------------------------------------------------------------------------------------
PRIMITIVE_TYPE --> int 
-----------------------------------------------------------------------------------------
accept int
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
accept (
-----------------------------------------------------------------------------------------
accept )
-----------------------------------------------------------------------------------------
accept {
-----------------------------------------------------------------------------------------
METHOD_BODY --> STATEMENT_LIST 
-----------------------------------------------------------------------------------------
STATEMENT_LIST --> STATEMENT_LIST_dash STATEMENT 
-----------------------------------------------------------------------------------------
STATEMENT --> DECLARATION 
-----------------------------------------------------------------------------------------
DECLARATION --> ; id PRIMITIVE_TYPE 
-----------------------------------------------------------------------------------------
PRIMITIVE_TYPE --> int 
-----------------------------------------------------------------------------------------
accept int
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
accept ;
-----------------------------------------------------------------------------------------
STATEMENT_LIST_dash --> STATEMENT_LIST_dash STATEMENT 
-----------------------------------------------------------------------------------------
STATEMENT --> WHILE 
-----------------------------------------------------------------------------------------
WHILE --> } STATEMENT { ) EXPRESSION ( while 
-----------------------------------------------------------------------------------------
accept while
-----------------------------------------------------------------------------------------
accept (
-----------------------------------------------------------------------------------------
EXPRESSION --> EXPRESSION` SIMPLE_EXPRESSION 
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
EXPRESSION` --> SIMPLE_EXPRESSION relop 
-----------------------------------------------------------------------------------------
accept relop
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> num 
-----------------------------------------------------------------------------------------
accept num
-----------------------------------------------------------------------------------------
accept )
-----------------------------------------------------------------------------------------
accept {
-----------------------------------------------------------------------------------------
STATEMENT --> ASSIGNMENT 
-----------------------------------------------------------------------------------------
ASSIGNMENT --> ; EXPRESSION assign id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
error: missing assign inserted
-----------------------------------------------------------------------------------------
error: illegal EXPRESSION discord =
-----------------------------------------------------------------------------------------
EXPRESSION --> EXPRESSION` SIMPLE_EXPRESSION 
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION_dash --> SIMPLE_EXPRESSION_dash TERM addop 
-----------------------------------------------------------------------------------------
accept addop
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> num 
-----------------------------------------------------------------------------------------
accept num
-----------------------------------------------------------------------------------------
accept ;
-----------------------------------------------------------------------------------------
accept }
-----------------------------------------------------------------------------------------
STATEMENT_LIST_dash --> STATEMENT_LIST_dash STATEMENT 
-----------------------------------------------------------------------------------------
STATEMENT --> IF 
-----------------------------------------------------------------------------------------
IF --> } STATEMENT { else } STATEMENT { ) EXPRESSION ( if 
-----------------------------------------------------------------------------------------
accept if
-----------------------------------------------------------------------------------------
accept (
-----------------------------------------------------------------------------------------
EXPRESSION --> EXPRESSION` SIMPLE_EXPRESSION 
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
EXPRESSION` --> SIMPLE_EXPRESSION relop 
-----------------------------------------------------------------------------------------
accept relop
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> num 
-----------------------------------------------------------------------------------------
accept num
-----------------------------------------------------------------------------------------
accept )
-----------------------------------------------------------------------------------------
accept {
-----------------------------------------------------------------------------------------
STATEMENT --> ASSIGNMENT 
-----------------------------------------------------------------------------------------
ASSIGNMENT --> ; EXPRESSION assign id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
error: missing assign inserted
-----------------------------------------------------------------------------------------
error: illegal EXPRESSION discord =
-----------------------------------------------------------------------------------------
EXPRESSION --> EXPRESSION` SIMPLE_EXPRESSION 
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION_dash --> SIMPLE_EXPRESSION_dash TERM addop 
-----------------------------------------------------------------------------------------
accept addop
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> num 
-----------------------------------------------------------------------------------------
accept num
-----------------------------------------------------------------------------------------
accept ;
-----------------------------------------------------------------------------------------
accept }
-----------------------------------------------------------------------------------------
accept else
-----------------------------------------------------------------------------------------
accept {
-----------------------------------------------------------------------------------------
STATEMENT --> ASSIGNMENT 
-----------------------------------------------------------------------------------------
ASSIGNMENT --> ; EXPRESSION assign id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
error: missing assign inserted
-----------------------------------------------------------------------------------------
error: illegal EXPRESSION discord =
-----------------------------------------------------------------------------------------
EXPRESSION --> EXPRESSION` SIMPLE_EXPRESSION 
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION --> SIMPLE_EXPRESSION_dash TERM 
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
SIMPLE_EXPRESSION_dash --> SIMPLE_EXPRESSION_dash TERM addop 
-----------------------------------------------------------------------------------------
accept addop
-----------------------------------------------------------------------------------------
TERM --> TERM_dash FACTOR 
-----------------------------------------------------------------------------------------
FACTOR --> id 
-----------------------------------------------------------------------------------------
accept id
-----------------------------------------------------------------------------------------
accept ;
-----------------------------------------------------------------------------------------
accept }
-----------------------------------------------------------------------------------------
accept }
-----------------------------------------------------------------------------------------
accept }
-----------------------------------------------------------------------------------------
